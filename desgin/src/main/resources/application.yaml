logging:
  level:
    root: info
    com.coder.design.controller: trace
  pattern:
    console: "%d{yyyy-MM-dd} ---- %-5level [%thread] %logger{10}:%msg%n"
  file:
    path: E:\\code\\github\\bs\\DeepFake\\desgin\\mylog
    name: E:\\code\\github\\bs\\DeepFake\\desgin\\mylog\\design.log

spring:
  mail:
    host: smtp.qq.com
    username: ${QQ_EMAIL}
    password: ${QQ_EMAIL_PWD}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWD}
    timeout: 50000
    database: 0
    lettuce:
      pool:
        max-wait: 50000
  datasource:
    name: defaultDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWD}
    hikari:
      connection-timeout: 10000
      validation-timeout: 3000
      idle-timeout: 60000
      login-timeout: 5
      max-lifetime: 60000
      maximum-pool-size: 10
      minimum-idle: 5
      read-only: false
  rabbitmq:
    host: ${RABBIT_HOST}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    port: ${RABBIT_PORT}
    virtual-host: /
  application:
    name: desgin
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: 30MB

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto

server:
  port: 8080
  servlet:
    context-path: /detector

deepfake:
  rq:
    email:
      queue: deepfake.email.queue
    record:
      queue: deepfake.record.queue
      deleteQueue: deepfake.record.deleteQueue
    redis:
      queue: deepfake.redis.queue
  ex: deepfake.ex
rabbitmq:
  params:
    split: ;;;
redis:
  expireTime: 1800

oss:
  server:
    url:
      prefix: https://deepfakedetector.oss-cn-hangzhou.aliyuncs.com/